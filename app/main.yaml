AWSTemplateFormatVersion: "2010-09-09"
Description: CV Website stack
Resources:
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !FindInMap [Constants,InstanceValues,ENVDomainName]
  WebAddress:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !Sub "${CloudFront.DomainName}"
      HostedZoneName: !Join ["", [!FindInMap [Constants,InstanceValues,ENVDomainName], "."]]
      Name: !Join ["", [!FindInMap [Constants,InstanceValues,ENVDomainName], "."]]
      Type: A
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !FindInMap [Constants,InstanceValues,ENVDomainName]
  CloudFront:
    DependsOn: Certificate
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !FindInMap [Constants,InstanceValues,ENVDomainName]
        CacheBehaviors: []
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          CachedMethods:
          - HEAD
          - GET
          - OPTIONS
          Compress: true
          TargetOriginId: S3Bucket
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
            Headers: []
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 31536000
          SmoothStreaming: false
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        Origins:
        - DomainName: !Join ["", [!FindInMap [Constants,InstanceValues,ENVDomainName], !Sub ".s3-website-${AWS::Region}.amazonaws.com"]]
          Id: S3Bucket
          CustomOriginConfig:
            HTTPPort: 80
            OriginProtocolPolicy: http-only
        PriceClass: PriceClass_All
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn: !Ref Certificate
  WebsiteS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !FindInMap [Constants,InstanceValues,ENVDomainName]
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: !Join ["", ["index-", !FindInMap [Constants,InstanceValues,ENVBuildId], ".html"]]
        ErrorDocument: !Join ["", ["error-", !FindInMap [Constants,InstanceValues,ENVBuildId], ".html"]]
  WebsiteS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteS3Bucket
      PolicyDocument:
        Statement:
          -
            Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
            Resource: !Join ["", ["arn:aws:s3:::", !Ref WebsiteS3Bucket, "/*"]]
