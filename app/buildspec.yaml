version: 0.2
phases:
  install:
    commands:
      - curl -sL https://deb.nodesource.com/setup_10.x | bash -
      - apt-get install -y nodejs
      - apt install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - npm install -g @adben002/cfn-yaml-value-injector
      - (cd app/content && npm install)
  pre_build:
    commands:
      - mkdir output/ temp/
      - BUILD_ID="$(date '+%s')"
      - paramOps=$(echo 'env -0 | while IFS="=" read -r -d "" n v; do if [[ $n =~ ^ENV* ]]; then echo -e --param.Mappings.Constants.InstanceValues.${n}="${v}"; fi ; done' | bash)
  build:
    commands:
      - echo "$paramOps"
      - echo cfn-yaml-value-injector --input='app/main.yaml' --output='temp/main.yaml' --param.Mappings.Constants.InstanceValues.ENVBuildId="${BUILD_ID}" --param.Mappings.Constants.InstanceValues.ENVIndexDoc="${BUILD_ID}/index.html" "$(echo $paramOps)" | bash
      - aws cloudformation package --template temp/main.yaml --s3-bucket ${ENVBucketName} --output-template output/main.yaml
      - (cd app/content/ && npm run build -- --env.buildId="${BUILD_ID}" && buildId="${BUILD_ID}" node pdf.js)
      - mv  app/content/dist/ output/
  post_build:
    commands:
      - aws s3 sync output/dist/ "s3://${ENVDomainName}" || ":"
artifacts:
  files:
    - output/main.yaml
